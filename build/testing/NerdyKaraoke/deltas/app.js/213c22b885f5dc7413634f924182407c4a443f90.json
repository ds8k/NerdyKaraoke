["function _947c708229bc4ffa55fa46794396a63cebda8c28(){};",250704,36,91,1048485,1048576,1048576,2097152,57754,"Used in the {@link Ext.tab.Bar} component. This shouldn't be used directly, instead use\n * {@link Ext.tab.Bar} or {@link Ext.tab.Panel}",353983,34,"tab.Tab', {\n    extend:  Ext.Button ,\n    xtype: 'tab",1219658,32,"Tab',\n\n    // @private\n    isTab",1208463,50,2082878,82,"tab",1235232,41,"pressed",1083440,32,"be applied to a Tab",1082924,32,"Providing your own CSS for this class enables you to customize the press",2059309,51,1082986,33,"tab-pressed",1235232,41,"activ",1083439,33,"be applied to a Tab when it is active.\n         * Providing your own CSS for this class enables you to customize the active",2059311,49,"activeCls: Ext.baseCSSPrefix + 'tab-activ",1530784,34,"Boolean} active\n         * Set this to `true` to have the tab be active by defaul",1211520,44,"ac",888623,51,1179004,34,"card that this tab is bound to",740976,44,"itle: '&nbsp;'\n    },\n\n    updateIconCls ",1194090,42,"callParent([newCls, oldCls]);\n",1822621,50,"'x-tab-icon');\n        }\n\n",1858782,34,"this.addCls('x-tab-icon",1290096,38,1020326,32," a tab is activated\n     * @param {Ext.tab.Tab",947023,38,"deactivate\n     * Fires when a tab is deactivated\n     * @param {Ext.tab.Tab} this\n     */\n\n    update",2073693,33,"this.setText(title",992807,44,", oldActive) {\n        var activeCls = this.getActiveCls();\n        if (active && !oldActive) {\n",1032286,32,"activeCls",2142317,32,"ctivate', this);\n        } else if (oldActive",758175,39,"activeCls);\n            this.fireEvent('deactivate', this);",1578244,37,"this.override({\n        activate",170777,32,"setActive(true);\n        },\n\n        deactivate",170777,32,"setActive(false",2047495,33,"Ext.tab.Bar is used internally by {@link Ext.tab.Panel} to create the bar of tabs that appears at the top of the tab\n * panel. It's unusual to use it directly, instead see the {@link Ext.tab.Panel tab panel docs} for usage instructions.\n *\n * Used in the {@link Ext.tab.Panel} component to display {@link Ext.tab.Tab} components",705069,37,"tab.Bar', {\n    extend:  Ext.Toolbar",1485280,32,"TabBar',\n    xtype : 'tabbar',\n\n",2152929,54,1178597,102,"abbar",1184293,32,"defaultType: 'tab",1184293,32,1180805,56,"middle'\n        }",732690,65,"/String/Ext.Component} activeTab\n         * The initially activated tab. Can be specified as numeric index,\n         * component ID or as the component instance",1400927,40,1021366,36,"Tab",695664,37,"tabchange\n     * Fired when active tab changes.\n     * @param {Ext.tab.Bar} this\n     * @param {Ext.tab.Tab} newTab The new Tab\n     * @param {Ext.tab.Tab} oldTab The old Tab\n     */",2070511,33,"theme: ['Blackberry', 'CupertinoClassic', 'MountainView'],\n",1242255,32,"flex: 1\n        }\n    }],\n",2088992,90,"on({\n            tap: 'onTabTap',\n\n            delegate: '> tab",1837358,40,1094379,32,"bTap: function(tab) {\n        this.setActiveTab(tab",971392,47,"applyActiveTab: function(newActiveTab, oldActiveTab) {\n        if (!newActiveTab && newActiveTab !== 0",1425631,47,"newTabInstance = this.parseActiveTab(newActiveTab);\n\n        if (!newTabInstance) {\n            if (oldActiveTab)",1409884,36,"Trying to set a non-existent activeTab'",1711584,35,";\n        }\n        return newTabInstanc",909232,42,"Default pack to center when docked to the bottom, otherwise default pack to left\n     */\n    doSetDocked: function(newDocked",826736,41,",\n",166520,33,1245391,32,"pack;\n\n        if (!initialConfig.layout || !initialConfig.layout.pack) {\n            pack = (newDocked == 'bottom') ? 'center' : 'left';\n            //layout isn't guaranteed to be instantiated so must test\n            if (layout.isLayout",2221858,35,"pack",464704,40,"layout.pack = (layout && layout.pack) ? layout.pack : pack;\n            }\n        }\n\n\t\t",996560,32,563920,35,"Sets the active tab\n     */\n    doSetActiveTab: function(newTab, oldTab) {\n        if (newTab) {\n            newTab.setActive(true);\n        }\n\n        //Check if the parent is present, if not it is destroyed\n        if (oldTab && oldTab.parent) {\n            oldTab.setActive(fals",2225392,37,"@private\n     * Parses the active tab, which can be a number or string\n     */\n    parseActiveTab: function(tab) {\n        //we need to call getItems to initialize the items, otherwise they will not exist yet.\n        if (typeof tab == 'number') {\n\t\t\treturn this.getItems().items[tab]",1735240,36,"tab == 'string') {\n            tab = Ext.getCmp(tab);\n        }\n        return tab",1068416,33,"tabs",1175117,33," @aside example tabs\n * @aside example tabs-bottom\n *\n * Tab Panels are a great way to allow the user to switch between several pages that are all full screen. Each\n * Component in the Tab Panel gets its own Tab, which shows the Component when tapped on. Tabs can be positioned at\n * the top or the bottom of the Tab Panel, and can optionally accept title and icon configurations.\n *\n * Here's how we can set up a simple Tab Panel with tabs at the bottom. Use the controls at the top left of the example\n * to toggle between code mode and live preview mode (you can also edit the code and see your changes in the live\n * preview)",1078016,62,"Tab",2069212,50,"tabBarPosition: 'bottom',\n *",1078143,39,"styleHtmlContent: true",1843744,33,722800,41,"title: 'Home',\n *                 iconCls: 'home',\n *                 html: 'Home Screen",1176000,56,"title: 'Contact',\n *                 iconCls: 'user',\n *                 html: 'Contact Screen'",1701888,39,");\n * One tab was created for each of the {@link Ext.Panel panels} defined in the items array. Each tab automatically uses\n * the title and icon defined on the item configuration, and switches to that item when tapped on. We can also position\n * the tab bar at the top, which makes our Tab Panel look like this",1078016,62,"Tab",2069212,41,1078143,39,"styleHtmlContent: true",1843744,33,722800,41,"title: 'Home',\n *                 html: 'Home Screen",1176000,56,"title: 'Contact',\n *                 html: 'Contact Screen'",1701888,39,");\n *\n */\nExt.define('Ext.tab",1069552,44,"xtype : 'tabpanel",1219658,32,"TabPanel',\n\n",2152929,54,1178717,43,"Sets the UI of this component.\n         * Available values are: `light` and `dark",518336,44,1178944,42,"Object} tabBar\n         * An Ext.tab.Bar",1856746,57,"tabBar",2216768,46,"tabBarPosition",1179299,38,"e {@link #tabBar} instanc",1509487,33," 'top' and 'bottom",1854784,45,"abBarPosition: 'to",1854847,33,"layout",1178624,44,"layout: {\n            type: 'card',\n            animation: {\n    ",852272,39,"    direction: 'left",2085152,56,"c",1178622,46,"cls: Ext.baseCSSPrefix + 'tabpanel'",1187968,38,1021448,38,"@accessor\n         * @hide",1211184,50,"/String/Object} scroll",1013903,34,"},\n",2060080,38,1087530,33,"on({\n",2235519,41,"activetabchange: 'doTabChange',\n            delegate: '> tabbar',\n            scope   ",1330670,33,"on({\n            disabledchange: 'onItemDisabledChange',",812510,36,",\n            scope   : this\n        }",1097674,51,"Blackberry'],\n        tabBarPosition: 'bottom'\n    }],\n\n    /**\n     * Tab panels should not be scrollable. Instead, you should add scrollable to any item that\n     * you want to scroll.",1282080,34,"Scrollabl",1297504,61,"Updates the Ui for this component and the {@link #tabBar}.\n     */",1928301,48,1053647,37,774955,36,"this.getTabBar().setUi(newUi",1286128,57,1053069,66,1038560,33,"var items = this.getInnerItems(),\n                oldIndex = items.indexOf(oldActiveItem),\n                newIndex = items.indexOf(newActiveItem),\n                reverse = oldIndex > newIndex,",780951,37,"Layout().getAnimation(),\n                tabBar = this.getTabBar(),\n                oldTab = tabBar.parseActiveTab(oldIndex),\n                newTab = tabBar.parseActiveTab(newIndex);\n\n    ",865285,35,"setReverse) {\n                animation.setReverse(reverse",432352,35,995533,40,"newIndex != -1) {\n                this.forcedChange = true;\n                tabBar.setActiveTab(newIndex);\n                this.forcedChange",284867,32,"ldTab) {\n                    oldTab.setActive",774752,44,"if (newTab) {\n                    newTab.setActive(tru",1147824,44,"}",1169696,34,"is container with the new active item.\n     * @param {Object} tabBar\n     * @param {Object} newTab",766383,38,"doTabChange: function(tabBar, newTab) {\n        var oldActiveItem = this.getActiveItem(),\n            newActiveItem;\n\n        this.setActiveItem(tabBar.indexOf(newTab));\n        newActiveItem = this.getActiveItem();\n        return this.forcedChange || oldActiveItem !== newActiveItem",116320,35,"new {@link Ext.tab.B",1240188,49,1522165,51," @private\n     */\n    applyTabBar",1000832,33,1098703,41,"};\n        }",1009276,36,1239184,38,"ui: this.getUi(),\n                docked: this.getTabBarPosition",1730831,38,"return Ext.factory(config, Ext.tab.Bar, this.getTabBar",1241049,52,"tab.B",1241320,68,"TabBar: function(newTabBar) {\n        if (newTabBar) {\n            this.add(newTabBar);\n            this.setTabBarPosition(newTabBar.getDocked()",1196832,48,"docked position of the {@link #tabBar}",1170480,36,"TabBar",874653,43,"tabBar = this.getTabBar();\n        if (tabBar) {\n            tabBar.setDocked(position);\n        }",1949791,33,"ca",2090079,42,"!card.isInnerItem()) {\n            return",1871888,35,"}\n\n        var tabBar = me.getTabBar(),\n            initialConfig = card",1245390,33,"tabConfig = initialConfig.tab || {},\n            tabTitle = (card.getTitle) ? card.getTitle() : initialConfig.title,\n            tabIconCls = (card.getIconCls) ? card.getIconCls() : initialConfig.iconCls,\n            tabHidden = (card.getHidden) ? card.getHidden() : initialConfig.hidden,\n            tabDisabled = (card.getDisabled) ? card.getDisabled() : initialConfig.disabled,\n            tabBadgeText = (card.getBadgeText) ? card.getBadgeText() : initialConfig.badgeText",1039511,45,",\n            index = innerItems.indexOf(card),\n            tabs = tabBar.getItems(),\n            activeTab = tabBar.getActiveTab(),\n            currentTabInstance = (tabs.length >= innerItems.length) && tabs.getAt(index),\n            tabInstance;\n\n        if (tabTitle && !tabConfig.title) {\n            tabConfig.title = tabTitle;\n        }\n\n        if (tabIconCls && !tabConfig.iconCls) {\n            tabConfig.iconCls = tabIconCls;\n        }\n\n        if (tabHidden && !tabConfig.hidden) {\n            tabConfig.hidden = tabHidden;\n        }\n\n        if (tabDisabled && !tabConfig.disabled) {\n            tabConfig.disabled = tabDisabled;\n        }\n\n        if (tabBadgeText && !tabConfig.badgeText) {\n            tabConfig.badgeText = tabBadgeText;",1365139,32,"TabInstance && !tabConfig.title && !tabConfig.iconCls) {\n            if (!tabConfig.title && !tabConfig.iconCl",862554,38,"'Adding a card to a tab container without specifying any tab configuration",1410624,37,"tabInstance = Ext.factory(tabConfig, Ext.tab.Tab, currentTabInstance);\n\n        if (!currentTabInstance) {\n            tabBar.insert(index, tabInstance);\n        }\n\n        card.tab = tabInstance",1858351,46,"if (!activeTab && activeTab !== 0) {\n            tabBar.setActiveTab(tabBar.getActiveItem",1286126,38,"If an item gets enabled/disabled and it has an tab, we should also enable/disable that tab",754544,32,"temDisabledChange: function(item, newDisabled) {\n        if (item && item.tab) {\n            item.tab",2118654,36,1201352,32,"temRemove",1043772,34,"this.getTabBar().remove(item.tab, this.getAutoDestroy()",941904,45,1884985,37,2154914,54992,2209950,70,"\t\tsorters: 'Title',\n\t\tgrouper: 'Artist',",1784438,37,2210056,142,",\n   ",1511933,34,"Count'\n            }\n    ",2210355,155,"Ext.define('NerdyKaraoke.store.LyricsStor",2209870,36,"\n    config: {\n    \tautoLoad: true,\n    \tfields: [\n    \t\t'artist',\n    \t\t'song',\n    \t\t'lyrics',\n    \t\t'url'\n    \t],\n    \tproxy: {\n    \t\ttype: 'ajax',\n    \t\tnoCache: false,\n    \t\theaders: {\n    \t\t\t'X-Wikia-API-Key': '6272b2dd183729263dcfd28816537be564787b53'\n    \t\t},\n    \t\turl: 'queen.json',\n    \t\tuseDefaultXhrHeader: false,\n    \t\tenablePagingParams: false,\n    \t\treader: {\n    \t\t\ttype: 'json'\n    \t\t}\n    \t",2210497,30020,"List",2240991,35,"TrackList",2240559,40,2240635,138,"tru",2240777,206,"TrackLyrics",1178364,43,": 'TrackLyrics',\n    config: {\n    \tscrollable: true,\n\n    \titems: [\n    \t\t{\n    \t\t\txtype: 'container',\n    \t\t\ttitle: 'Lyrics',\n\t\t\t\tscrollDock: 'top',\n\t\t\t\tpadding: '0px 0px 40px 0px',\n\t\t\t\tstyleHtmlContent: true,\n\t\t\t\thtml: 'Lyrics'\n    \t\t},\n    \t\t{\n    \t\t\txtype: 'container',\n    \t\t\tlayout: 'hbox',\n    \t\t\tdocked: 'bottom',\n    \t\t\titems: [\n    \t\t\t\t{\n    \t\t\t\t\txtype: 'button',\n    \t\t\t\t\ttext: 'Back',\n    \t\t\t\t\tright: '50%',\n    ",983495,49,986109,35,"    margin: '0.6em 0.3em 0.6em 0.75em',\n    \t\t\t\t\thandler: function() {\n    \t\t\t\t\t\tExt.ComponentQuery.query('TrackContainer')[0].setActiveItem(0);\n    \t\t\t\t\t}\n    \t\t\t\t},\n    \t\t\t\t{\n    \t\t\t\t\txtype: 'button',\n    \t\t\t\t\taction: 'viewlyrics',\n    \t\t\t\t\tleft: '50%',\n                        right: 0,\n    ",983864,51,"    margin: '0.6em 0.75em 0.6em 0.3em'\n    \t\t\t\t}\n    \t\t\t]\n    \t\t}\n    \t]\n    ",2209119,32,"view.TrackContainer', {\n\textend:  Ext.tab.Panel ,\n\txtype: 'TrackContainer',\n\n\tconfig: {\n\t\ttabBarPosition: 'bottom',\n\t\ttabBar: {\n\t\t\thidden: true\n\t\t},\n\t\titems: [\n\t\t\t{\n\t\t\t\txtype: 'TrackList',\n\t\t\t\ttitle: 'Tracks',\n\t\t\t\ttabIndex: 0\n\t\t\t},\n\t\t\t{\n\t\t\t\txtype: 'TrackLyrics',\n\t\t\t\ttitle: 'Lyrics',\n\t\t\t\ttabIndex: 1\n\t\t\t}\n\t\t]",2240944,2167,"action: 'submitRequest'\n\t       //",1177168,32,"\t       //",2243140,55,"//",2243194,99,"//",2243292,55,"//",2243346,45,"//",2243390,41,"//",1276746,33,"Thanks!');\n\t       //",2243481,40,"//              } else {\n\t       //",2243550,45,"//",2243594,75,"// ",2243669,50,"//                  });\n\n\t       //",1276746,33,"Uh oh!', message);\n\t       //              }\n\t       //",2243830,425,2244293,775,2245067,34,2251320,203,"items: [\n    ",1174027,46,2245363,98,"name: 'search",2245430,63,"\n    ",18350,38,"    ]\n",304767,35,"{\n                    xtype: 'TrackContainer'",2005373,42,2251660,32,2251306,756,"Ext.define('NerdyKaraoke.controller.EventController",1317832,44,"config: {\n\t\trefs: {\n            SearchTracks: 'searchfield[name=search]',\n            LyricsItemTap: 'list[xtype=TrackList]',\n            ViewLyrics: 'button[action=viewlyrics]',\n            SubmitRequest: 'button[action=submitRequest]'\n        },\n        control: {\n            SearchTracks: {\n                keyup: 'searchTrackList',\n                clearicontap: 'clearTrackList'\n            },\n            LyricsItemTap: {\n            \titemtap: 'onTrackTap'\n            },\n            ViewLyrics: {\n            \ttap: 'onViewLyricsTap'\n            },\n            SubmitRequest: {\n            \ttap: 'onSubmitRequest'",770896,37,"searchTrackList: function(field, e) {\n    \t",2245715,40,"return\n        }\n\n        Ext.ComponentQuery.query('list[xtype=TrackList]')[0]",945758,32,"crollTo(0,0);\n        Ext.ComponentQuery.query('list[xtype=TrackList]')[0].refresh();\n\n",2246093,53,2246178,39,2246249,55,"store.clearFilter();\n\n",2246390,91,"if (value) {\n",2246558,116,2246706,35,2246773,48,2246853,51,"var regexps = [];\n            var i;\n\n",2247104,40,2247176,56,2247264,45,2247341,45,2247418,85,2247535,65,2247632,68,2247732,50,"}\n",2247848,81,2247961,40,"}\n\n",2248068,72,"}\n\n",2248207,67,2248306,76,2248414,48,2248494,34,2248560,33,"var firstlast;\n",2248672,48,2248752,63,2248847,59,"var search = regexps[i];\n",2248995,108,2249135,73,2249240,79,2249351,69,"replace(/\\s+/g, '",2249417,121,2249570,91,2249693,40,"}\n",2249799,92,2249923,78,"return false",234064,47,2250156,57,2250245,35,1012480,35,"\n    clearTrackList: function() {\n    \tExt.ComponentQuery.query('list[xtype=TrackList]')[0]",945758,32,"crollTo(0,0);\n\t\tExt.ComponentQuery.query('list[xtype=TrackList]')[0].refresh();\n\t\tExt.ComponentQuery.query('TrackContainer')[0].setActiveItem(0);\n\t\t",2250907,39,"    },\n\n    onTrackTap: function(list, index, target, record) {\n    \tvar store = Ext.getStore('LyricsStore').getData().items[0].raw;\n    \tvar tabp",1142471,33,"TrackContainer')[0];\n    \tvar detailsTab = tabpanel.getInnerItems()[1];\n    \tvar button = ",1080173,32,"[action=viewlyrics]')[0];\n\n    \tdetailsTab.down('container').setHtml(\n    \t\t'<h3>' + record.data.Artist + '</br>' + record.data.Title + '</h3>' + \n    \t\tstore.lyrics.replace(/\\n/g, '</br>')\n    \t);\n\n    \ttabpanel.setActiveItem(1);\n\n    \tif(store.lyrics.toUpperCase() != 'NOT FOUND') {\n    \t\tbutton.setText('View Full Lyrics');\n    \t} else {\n    \t\tbutton.setText('Search Lyrics');\n    \t}\n    },\n\n    onViewLyricsTap: function(button) {\n    \tvar store = Ext.getStore('LyricsStore').getData().items[0].raw;\n        var record = button.up('container').getRecord();\n\n    \tif(store.lyrics.toUpperCase() != 'NOT FOUND') {\n    \t\twindow.open(store.url, '_system');\n    \t} else {\n    \t\twindow.open('https://www.google.com/search?q=' + store.artist + ' ' + store.song + ' lyrics', '_system');\n    \t}\n    },\n\n    onSubmitRequest: function(button) {\n    \tvar form = button.up('formpanel');\n",2243200,85,2243298,40,2246093,53,"var middle = Math.round(store.getTotalCount()/2);\n        var ids = [];\n\n        if(errors.isValid()) {\n            var index = (function() {\n                if(form.getValues().artist.toUpperCase() >= store.getData().all[middle].raw.Artist.toUpperCase",1501600,33,"middle",234064,47,"return 0",61312,33,")();\n            console.log(index);\n\t\t\tstore.data.each(function(rec, index) {\n\t        \tif(form.getValues().artist.toUpperCase() === rec.get('Artist').toUpperCase() && form.getValues().title.toUpperCase() === rec.get('Title').toUpperCase()) {\n\t        \t\tids.push(rec);\n\t        \t\treturn false;\n\t        \t}\n\t        });\n\n        \tif (ids.length > 0 && ids[0].data.Artist.toUpperCase() === form.getValues().artist.toUpperCase()) {\n        \t\tExt.Msg.confirm(\n        \t\t\t'Whoops!', \n        \t\t\t'We might have this already: </br>' + ids[0].data.Artist + ' - ' + ids[0].data.Title + '</br></br>Send request anyway?',\n        \t\t\tfunction(buttonText) {\n        \t\t\t\tExt.defer(function() {\n        \t\t\t\t\tif(buttonText === 'yes') {\n\t        \t\t\t\t\tform.submit();\n\t\t\t\t\t",2243436,39,"\t\t\t\t",2243487,35,"\t\t\t\t}\n        \t\t\t\t}, 50);\n        \t\t\t}\n        \t\t);\n        \t} else {\n\t",2243396,40,2243448,39,"form.reset();\n        \t",46909,35,"message = '';\n\n",2243600,65,2243669,42,"            });\n\n",2243754,46,"        }",2252050,794,",\n        'LyricsStor",2252842,77,"controllers: [\n        'EventController",2252905,73,"Container',\n            'TrackList',\n            'TrackLyric",2252978,2203]